import "./chunk-M2WFSZUH.js";
import "./chunk-YYZQZSN5.js";
import {
  add_locations,
  append_styles,
  bind_this,
  check_target,
  cleanup_styles,
  component,
  derived,
  each,
  get as get2,
  hmr,
  if_block,
  init,
  legacy_api,
  onDestroy,
  onMount,
  prop,
  set_attributes,
  set_class,
  set_style,
  setup_stores,
  slot,
  spread_props,
  store_get,
  validate_each_keys,
  validate_store,
  writable
} from "./chunk-QV56XU5R.js";
import {
  append,
  comment,
  set_text,
  template,
  text
} from "./chunk-SQKVUDXZ.js";
import {
  FILENAME,
  HMR,
  apply,
  child,
  deep_read_state,
  derived_safe_equal,
  event,
  first_child,
  get,
  legacy_pre_effect,
  legacy_pre_effect_reset,
  mutable_source,
  pop,
  push,
  reset,
  set,
  sibling,
  strict_equals,
  template_effect
} from "./chunk-VBINPFYW.js";
import "./chunk-55T6SK4B.js";
import "./chunk-3LUZOQLA.js";
import "./chunk-VF3DN2VW.js";
import "./chunk-WOTSTHLU.js";
import "./chunk-2OJJ7JW3.js";
import "./chunk-UGBVNEQM.js";

// node_modules/.pnpm/svelte-writable-derived@3.1.1_svelte@5.28.2/node_modules/svelte-writable-derived/index.mjs
function writableDerived(origins, derive, reflect, initial) {
  var childDerivedSetter, originValues, blockNextDerive = false;
  var reflectOldValues = reflect.length >= 2;
  var wrappedDerive = (got, set2, update3) => {
    childDerivedSetter = set2;
    if (reflectOldValues) {
      originValues = got;
    }
    if (!blockNextDerive) {
      let returned = derive(got, set2, update3);
      if (derive.length < 2) {
        set2(returned);
      } else {
        return returned;
      }
    }
    blockNextDerive = false;
  };
  var childDerived = derived(origins, wrappedDerive, initial);
  var singleOrigin = !Array.isArray(origins);
  function doReflect(reflecting) {
    var setWith = reflect(reflecting, originValues);
    if (singleOrigin) {
      blockNextDerive = true;
      origins.set(setWith);
    } else {
      setWith.forEach((value, i) => {
        blockNextDerive = true;
        origins[i].set(value);
      });
    }
    blockNextDerive = false;
  }
  var tryingSet = false;
  function update2(fn) {
    var isUpdated, mutatedBySubscriptions, oldValue, newValue;
    if (tryingSet) {
      newValue = fn(get2(childDerived));
      childDerivedSetter(newValue);
      return;
    }
    var unsubscribe = childDerived.subscribe((value) => {
      if (!tryingSet) {
        oldValue = value;
      } else if (!isUpdated) {
        isUpdated = true;
      } else {
        mutatedBySubscriptions = true;
      }
    });
    newValue = fn(oldValue);
    tryingSet = true;
    childDerivedSetter(newValue);
    unsubscribe();
    tryingSet = false;
    if (mutatedBySubscriptions) {
      newValue = get2(childDerived);
    }
    if (isUpdated) {
      doReflect(newValue);
    }
  }
  return {
    subscribe: childDerived.subscribe,
    set(value) {
      update2(() => value);
    },
    update: update2
  };
}

// node_modules/.pnpm/svelte-french-toast@1.2.0_svelte@5.28.2/node_modules/svelte-french-toast/dist/core/store.js
var TOAST_LIMIT = 20;
var toasts = writable([]);
var pausedAt = writable(null);
var toastTimeouts = /* @__PURE__ */ new Map();
var addToRemoveQueue = (toastId) => {
  if (toastTimeouts.has(toastId)) {
    return;
  }
  const timeout = setTimeout(() => {
    toastTimeouts.delete(toastId);
    remove(toastId);
  }, 1e3);
  toastTimeouts.set(toastId, timeout);
};
var clearFromRemoveQueue = (toastId) => {
  const timeout = toastTimeouts.get(toastId);
  if (timeout) {
    clearTimeout(timeout);
  }
};
function update(toast2) {
  if (toast2.id) {
    clearFromRemoveQueue(toast2.id);
  }
  toasts.update(($toasts) => $toasts.map((t) => t.id === toast2.id ? { ...t, ...toast2 } : t));
}
function add(toast2) {
  toasts.update(($toasts) => [toast2, ...$toasts].slice(0, TOAST_LIMIT));
}
function upsert(toast2) {
  if (get2(toasts).find((t) => t.id === toast2.id)) {
    update(toast2);
  } else {
    add(toast2);
  }
}
function dismiss(toastId) {
  toasts.update(($toasts) => {
    if (toastId) {
      addToRemoveQueue(toastId);
    } else {
      $toasts.forEach((toast2) => {
        addToRemoveQueue(toast2.id);
      });
    }
    return $toasts.map((t) => t.id === toastId || toastId === void 0 ? { ...t, visible: false } : t);
  });
}
function remove(toastId) {
  toasts.update(($toasts) => {
    if (toastId === void 0) {
      return [];
    }
    return $toasts.filter((t) => t.id !== toastId);
  });
}
function startPause(time) {
  pausedAt.set(time);
}
function endPause(time) {
  let diff;
  pausedAt.update(($pausedAt) => {
    diff = time - ($pausedAt || 0);
    return null;
  });
  toasts.update(($toasts) => $toasts.map((t) => ({
    ...t,
    pauseDuration: t.pauseDuration + diff
  })));
}
var defaultTimeouts = {
  blank: 4e3,
  error: 4e3,
  success: 2e3,
  loading: Infinity,
  custom: 4e3
};
function useToasterStore(toastOptions = {}) {
  const mergedToasts = writableDerived(toasts, ($toasts) => $toasts.map((t) => {
    var _a, _b;
    return {
      ...toastOptions,
      ...toastOptions[t.type],
      ...t,
      duration: t.duration || ((_a = toastOptions[t.type]) == null ? void 0 : _a.duration) || (toastOptions == null ? void 0 : toastOptions.duration) || defaultTimeouts[t.type],
      style: [toastOptions.style, (_b = toastOptions[t.type]) == null ? void 0 : _b.style, t.style].join(";")
    };
  }), ($toasts) => $toasts);
  return {
    toasts: mergedToasts,
    pausedAt
  };
}

// node_modules/.pnpm/svelte-french-toast@1.2.0_svelte@5.28.2/node_modules/svelte-french-toast/dist/core/types.js
var isFunction = (valOrFunction) => typeof valOrFunction === "function";
var resolveValue = (valOrFunction, arg) => isFunction(valOrFunction) ? valOrFunction(arg) : valOrFunction;

// node_modules/.pnpm/svelte-french-toast@1.2.0_svelte@5.28.2/node_modules/svelte-french-toast/dist/core/utils.js
var genId = /* @__PURE__ */ (() => {
  let count = 0;
  return () => {
    count += 1;
    return count.toString();
  };
})();
var prefersReducedMotion = /* @__PURE__ */ (() => {
  let shouldReduceMotion;
  return () => {
    if (shouldReduceMotion === void 0 && typeof window !== "undefined") {
      const mediaQuery = matchMedia("(prefers-reduced-motion: reduce)");
      shouldReduceMotion = !mediaQuery || mediaQuery.matches;
    }
    return shouldReduceMotion;
  };
})();

// node_modules/.pnpm/svelte-french-toast@1.2.0_svelte@5.28.2/node_modules/svelte-french-toast/dist/core/toast.js
var createToast = (message, type = "blank", opts) => ({
  createdAt: Date.now(),
  visible: true,
  type,
  ariaProps: {
    role: "status",
    "aria-live": "polite"
  },
  message,
  pauseDuration: 0,
  ...opts,
  id: (opts == null ? void 0 : opts.id) || genId()
});
var createHandler = (type) => (message, options) => {
  const toast2 = createToast(message, type, options);
  upsert(toast2);
  return toast2.id;
};
var toast = (message, opts) => createHandler("blank")(message, opts);
toast.error = createHandler("error");
toast.success = createHandler("success");
toast.loading = createHandler("loading");
toast.custom = createHandler("custom");
toast.dismiss = (toastId) => {
  dismiss(toastId);
};
toast.remove = (toastId) => remove(toastId);
toast.promise = (promise, msgs, opts) => {
  const id = toast.loading(msgs.loading, { ...opts, ...opts == null ? void 0 : opts.loading });
  promise.then((p) => {
    toast.success(resolveValue(msgs.success, p), {
      id,
      ...opts,
      ...opts == null ? void 0 : opts.success
    });
    return p;
  }).catch((e) => {
    toast.error(resolveValue(msgs.error, e), {
      id,
      ...opts,
      ...opts == null ? void 0 : opts.error
    });
  });
  return promise;
};
var toast_default = toast;

// node_modules/.pnpm/svelte-french-toast@1.2.0_svelte@5.28.2/node_modules/svelte-french-toast/dist/core/use-toaster.js
function calculateOffset(toast2, $toasts, opts) {
  const { reverseOrder, gutter = 8, defaultPosition } = opts || {};
  const relevantToasts = $toasts.filter((t) => (t.position || defaultPosition) === (toast2.position || defaultPosition) && t.height);
  const toastIndex = relevantToasts.findIndex((t) => t.id === toast2.id);
  const toastsBefore = relevantToasts.filter((toast3, i) => i < toastIndex && toast3.visible).length;
  const offset = relevantToasts.filter((t) => t.visible).slice(...reverseOrder ? [toastsBefore + 1] : [0, toastsBefore]).reduce((acc, t) => acc + (t.height || 0) + gutter, 0);
  return offset;
}
var handlers = {
  startPause() {
    startPause(Date.now());
  },
  endPause() {
    endPause(Date.now());
  },
  updateHeight: (toastId, height) => {
    update({ id: toastId, height });
  },
  calculateOffset
};
function useToaster(toastOptions) {
  const { toasts: toasts2, pausedAt: pausedAt2 } = useToasterStore(toastOptions);
  const timeouts = /* @__PURE__ */ new Map();
  let _pausedAt;
  const unsubscribes = [
    pausedAt2.subscribe(($pausedAt) => {
      if ($pausedAt) {
        for (const [, timeoutId] of timeouts) {
          clearTimeout(timeoutId);
        }
        timeouts.clear();
      }
      _pausedAt = $pausedAt;
    }),
    toasts2.subscribe(($toasts) => {
      if (_pausedAt) {
        return;
      }
      const now = Date.now();
      for (const t of $toasts) {
        if (timeouts.has(t.id)) {
          continue;
        }
        if (t.duration === Infinity) {
          continue;
        }
        const durationLeft = (t.duration || 0) + t.pauseDuration - (now - t.createdAt);
        if (durationLeft < 0) {
          if (t.visible) {
            toast_default.dismiss(t.id);
          }
          return null;
        }
        timeouts.set(t.id, setTimeout(() => toast_default.dismiss(t.id), durationLeft));
      }
    })
  ];
  onDestroy(() => {
    for (const unsubscribe of unsubscribes) {
      unsubscribe();
    }
  });
  return { toasts: toasts2, handlers };
}

// node_modules/.pnpm/svelte-french-toast@1.2.0_svelte@5.28.2/node_modules/svelte-french-toast/dist/components/CheckmarkIcon.svelte
CheckmarkIcon[FILENAME] = "node_modules/.pnpm/svelte-french-toast@1.2.0_svelte@5.28.2/node_modules/svelte-french-toast/dist/components/CheckmarkIcon.svelte";
var root = add_locations(template(`<div class="s-DlNN0uNXpOkm"></div>`), CheckmarkIcon[FILENAME], [[6, 0]]);
var $$css = {
  hash: "s-DlNN0uNXpOkm",
  code: "\n	div.s-DlNN0uNXpOkm {\n		width: 20px;\n		opacity: 0;\n		height: 20px;\n		border-radius: 10px;\n		background: var(--primary, #61d345);\n		position: relative;\n		transform: rotate(45deg);\n		animation: s-DlNN0uNXpOkm-circleAnimation 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards;\n		animation-delay: 100ms;\n	}\n\n	div.s-DlNN0uNXpOkm::after {\n		content: '';\n		box-sizing: border-box;\n		animation: s-DlNN0uNXpOkm-checkmarkAnimation 0.2s ease-out forwards;\n		opacity: 0;\n		animation-delay: 200ms;\n		position: absolute;\n		border-right: 2px solid;\n		border-bottom: 2px solid;\n		border-color: var(--secondary, #fff);\n		bottom: 6px;\n		left: 6px;\n		height: 10px;\n		width: 6px;\n	}\n\n	@keyframes s-DlNN0uNXpOkm-circleAnimation {\n		from {\n			transform: scale(0) rotate(45deg);\n			opacity: 0;\n		}\n		to {\n			transform: scale(1) rotate(45deg);\n			opacity: 1;\n		}\n	}\n\n	@keyframes s-DlNN0uNXpOkm-checkmarkAnimation {\n		0% {\n			height: 0;\n			width: 0;\n			opacity: 0;\n		}\n		40% {\n			height: 0;\n			width: 6px;\n			opacity: 1;\n		}\n		100% {\n			opacity: 1;\n			height: 10px;\n		}\n	}\n\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2hlY2ttYXJrSWNvbi5zdmVsdGUiLCJtYXBwaW5ncyI6IjtBQVFBLENBQUMsa0JBQUcsQ0FBQztBQUNMLEVBQUUsV0FBVztBQUNiLEVBQUUsVUFBVTtBQUNaLEVBQUUsWUFBWTtBQUNkLEVBQUUsbUJBQW1CO0FBQ3JCLEVBQUUsbUNBQW1DO0FBQ3JDLEVBQUUsa0JBQWtCO0FBQ3BCLEVBQUUsd0JBQXdCO0FBQzFCLEVBQUUsMEJBQVcscUVBQXFFO0FBQ2xGLEVBQUUsc0JBQXNCO0FBQ3hCOztBQUVBLENBQUMsa0JBQUcsT0FBTyxDQUFDO0FBQ1osRUFBRSxXQUFXO0FBQ2IsRUFBRSxzQkFBc0I7QUFDeEIsRUFBRSwwQkFBVyx5Q0FBeUM7QUFDdEQsRUFBRSxVQUFVO0FBQ1osRUFBRSxzQkFBc0I7QUFDeEIsRUFBRSxrQkFBa0I7QUFDcEIsRUFBRSx1QkFBdUI7QUFDekIsRUFBRSx3QkFBd0I7QUFDMUIsRUFBRSxvQ0FBb0M7QUFDdEMsRUFBRSxXQUFXO0FBQ2IsRUFBRSxTQUFTO0FBQ1gsRUFBRSxZQUFZO0FBQ2QsRUFBRSxVQUFVO0FBQ1o7O0FBRUEsQ0FBQywwQkFBVztBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxDQUFDLDBCQUFXO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlcyI6WyJDaGVja21hcmtJY29uLnN2ZWx0ZSJdfQ== */"
};
function CheckmarkIcon($$anchor, $$props) {
  check_target(new.target);
  push($$props, false, CheckmarkIcon);
  append_styles($$anchor, $$css);
  let primary = prop($$props, "primary", 8, "#61d345");
  let secondary = prop($$props, "secondary", 8, "#fff");
  var div = root();
  let styles;
  template_effect(() => styles = set_style(div, "", styles, {
    "--primary": primary(),
    "--secondary": secondary()
  }));
  append($$anchor, div);
  return pop({ ...legacy_api() });
}
if (import.meta.hot) {
  CheckmarkIcon = hmr(CheckmarkIcon, () => CheckmarkIcon[HMR].source);
  import.meta.hot.accept((module) => {
    cleanup_styles("s-DlNN0uNXpOkm");
    module.default[HMR].source = CheckmarkIcon[HMR].source;
    set(CheckmarkIcon[HMR].source, module.default[HMR].original);
  });
}
var CheckmarkIcon_default = CheckmarkIcon;

// node_modules/.pnpm/svelte-french-toast@1.2.0_svelte@5.28.2/node_modules/svelte-french-toast/dist/components/ErrorIcon.svelte
ErrorIcon[FILENAME] = "node_modules/.pnpm/svelte-french-toast@1.2.0_svelte@5.28.2/node_modules/svelte-french-toast/dist/components/ErrorIcon.svelte";
var root2 = add_locations(template(`<div class="s-nuBmYsMhQB_j"></div>`), ErrorIcon[FILENAME], [[6, 0]]);
var $$css2 = {
  hash: "s-nuBmYsMhQB_j",
  code: "\n	div.s-nuBmYsMhQB_j {\n		width: 20px;\n		opacity: 0;\n		height: 20px;\n		border-radius: 10px;\n		background: var(--primary, #ff4b4b);\n		position: relative;\n		transform: rotate(45deg);\n		animation: s-nuBmYsMhQB_j-circleAnimation 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards;\n		animation-delay: 100ms;\n	}\n\n	div.s-nuBmYsMhQB_j::after,\n	div.s-nuBmYsMhQB_j::before {\n		content: '';\n		animation: s-nuBmYsMhQB_j-firstLineAnimation 0.15s ease-out forwards;\n		animation-delay: 150ms;\n		position: absolute;\n		border-radius: 3px;\n		opacity: 0;\n		background: var(--secondary, #fff);\n		bottom: 9px;\n		left: 4px;\n		height: 2px;\n		width: 12px;\n	}\n\n	div.s-nuBmYsMhQB_j:before {\n		animation: s-nuBmYsMhQB_j-secondLineAnimation 0.15s ease-out forwards;\n		animation-delay: 180ms;\n		transform: rotate(90deg);\n	}\n\n	@keyframes s-nuBmYsMhQB_j-circleAnimation {\n		from {\n			transform: scale(0) rotate(45deg);\n			opacity: 0;\n		}\n		to {\n			transform: scale(1) rotate(45deg);\n			opacity: 1;\n		}\n	}\n\n	@keyframes s-nuBmYsMhQB_j-firstLineAnimation {\n		from {\n			transform: scale(0);\n			opacity: 0;\n		}\n		to {\n			transform: scale(1);\n			opacity: 1;\n		}\n	}\n\n	@keyframes s-nuBmYsMhQB_j-secondLineAnimation {\n		from {\n			transform: scale(0) rotate(90deg);\n			opacity: 0;\n		}\n		to {\n			transform: scale(1) rotate(90deg);\n			opacity: 1;\n		}\n	}\n\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRXJyb3JJY29uLnN2ZWx0ZSIsIm1hcHBpbmdzIjoiO0FBUUEsQ0FBQyxrQkFBRyxDQUFDO0FBQ0wsRUFBRSxXQUFXO0FBQ2IsRUFBRSxVQUFVO0FBQ1osRUFBRSxZQUFZO0FBQ2QsRUFBRSxtQkFBbUI7QUFDckIsRUFBRSxtQ0FBbUM7QUFDckMsRUFBRSxrQkFBa0I7QUFDcEIsRUFBRSx3QkFBd0I7QUFDMUIsRUFBRSwwQkFBVyxxRUFBcUU7QUFDbEYsRUFBRSxzQkFBc0I7QUFDeEI7O0FBRUEsQ0FBQyxrQkFBRyxPQUFPO0FBQ1gsQ0FBQyxrQkFBRyxRQUFRLENBQUM7QUFDYixFQUFFLFdBQVc7QUFDYixFQUFFLDBCQUFXLDBDQUEwQztBQUN2RCxFQUFFLHNCQUFzQjtBQUN4QixFQUFFLGtCQUFrQjtBQUNwQixFQUFFLGtCQUFrQjtBQUNwQixFQUFFLFVBQVU7QUFDWixFQUFFLGtDQUFrQztBQUNwQyxFQUFFLFdBQVc7QUFDYixFQUFFLFNBQVM7QUFDWCxFQUFFLFdBQVc7QUFDYixFQUFFLFdBQVc7QUFDYjs7QUFFQSxDQUFDLGtCQUFHLE9BQU8sQ0FBQztBQUNaLEVBQUUsMEJBQVcsMkNBQTJDO0FBQ3hELEVBQUUsc0JBQXNCO0FBQ3hCLEVBQUUsd0JBQXdCO0FBQzFCOztBQUVBLENBQUMsMEJBQVc7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsQ0FBQywwQkFBVztBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxDQUFDLDBCQUFXO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlcyI6WyJFcnJvckljb24uc3ZlbHRlIl19 */"
};
function ErrorIcon($$anchor, $$props) {
  check_target(new.target);
  push($$props, false, ErrorIcon);
  append_styles($$anchor, $$css2);
  let primary = prop($$props, "primary", 8, "#ff4b4b");
  let secondary = prop($$props, "secondary", 8, "#fff");
  var div = root2();
  let styles;
  template_effect(() => styles = set_style(div, "", styles, {
    "--primary": primary(),
    "--secondary": secondary()
  }));
  append($$anchor, div);
  return pop({ ...legacy_api() });
}
if (import.meta.hot) {
  ErrorIcon = hmr(ErrorIcon, () => ErrorIcon[HMR].source);
  import.meta.hot.accept((module) => {
    cleanup_styles("s-nuBmYsMhQB_j");
    module.default[HMR].source = ErrorIcon[HMR].source;
    set(ErrorIcon[HMR].source, module.default[HMR].original);
  });
}
var ErrorIcon_default = ErrorIcon;

// node_modules/.pnpm/svelte-french-toast@1.2.0_svelte@5.28.2/node_modules/svelte-french-toast/dist/components/LoaderIcon.svelte
LoaderIcon[FILENAME] = "node_modules/.pnpm/svelte-french-toast@1.2.0_svelte@5.28.2/node_modules/svelte-french-toast/dist/components/LoaderIcon.svelte";
var root3 = add_locations(template(`<div class="s-rThVnD33d1K8"></div>`), LoaderIcon[FILENAME], [[6, 0]]);
var $$css3 = {
  hash: "s-rThVnD33d1K8",
  code: "\n	div.s-rThVnD33d1K8 {\n		width: 12px;\n		height: 12px;\n		box-sizing: border-box;\n		border: 2px solid;\n		border-radius: 100%;\n		border-color: var(--secondary, #e0e0e0);\n		border-right-color: var(--primary, #616161);\n		animation: s-rThVnD33d1K8-rotate 1s linear infinite;\n	}\n\n	@keyframes s-rThVnD33d1K8-rotate {\n		from {\n			transform: rotate(0deg);\n		}\n		to {\n			transform: rotate(360deg);\n		}\n	}\n\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTG9hZGVySWNvbi5zdmVsdGUiLCJtYXBwaW5ncyI6IjtBQVFBLENBQUMsa0JBQUcsQ0FBQztBQUNMLEVBQUUsV0FBVztBQUNiLEVBQUUsWUFBWTtBQUNkLEVBQUUsc0JBQXNCO0FBQ3hCLEVBQUUsaUJBQWlCO0FBQ25CLEVBQUUsbUJBQW1CO0FBQ3JCLEVBQUUsdUNBQXVDO0FBQ3pDLEVBQUUsMkNBQTJDO0FBQzdDLEVBQUUsMEJBQVcseUJBQXlCO0FBQ3RDOztBQUVBLENBQUMsMEJBQVc7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZXMiOlsiTG9hZGVySWNvbi5zdmVsdGUiXX0= */"
};
function LoaderIcon($$anchor, $$props) {
  check_target(new.target);
  push($$props, false, LoaderIcon);
  append_styles($$anchor, $$css3);
  let primary = prop($$props, "primary", 8, "#616161");
  let secondary = prop($$props, "secondary", 8, "#e0e0e0");
  var div = root3();
  let styles;
  template_effect(() => styles = set_style(div, "", styles, {
    "--primary": primary(),
    "--secondary": secondary()
  }));
  append($$anchor, div);
  return pop({ ...legacy_api() });
}
if (import.meta.hot) {
  LoaderIcon = hmr(LoaderIcon, () => LoaderIcon[HMR].source);
  import.meta.hot.accept((module) => {
    cleanup_styles("s-rThVnD33d1K8");
    module.default[HMR].source = LoaderIcon[HMR].source;
    set(LoaderIcon[HMR].source, module.default[HMR].original);
  });
}
var LoaderIcon_default = LoaderIcon;

// node_modules/.pnpm/svelte-french-toast@1.2.0_svelte@5.28.2/node_modules/svelte-french-toast/dist/components/ToastIcon.svelte
ToastIcon[FILENAME] = "node_modules/.pnpm/svelte-french-toast@1.2.0_svelte@5.28.2/node_modules/svelte-french-toast/dist/components/ToastIcon.svelte";
var root_1 = add_locations(template(`<div class="animated s-TdUUvGzjo682"> </div>`), ToastIcon[FILENAME], [[10, 1]]);
var root_6 = add_locations(template(`<div class="status s-TdUUvGzjo682"><!></div>`), ToastIcon[FILENAME], [[17, 3]]);
var root_5 = add_locations(template(`<div class="indicator s-TdUUvGzjo682"><!> <!></div>`), ToastIcon[FILENAME], [[14, 1]]);
var $$css4 = {
  hash: "s-TdUUvGzjo682",
  code: "\n	.indicator.s-TdUUvGzjo682 {\n		position: relative;\n		display: flex;\n		justify-content: center;\n		align-items: center;\n		min-width: 20px;\n		min-height: 20px;\n	}\n\n	.status.s-TdUUvGzjo682 {\n		position: absolute;\n	}\n\n	.animated.s-TdUUvGzjo682 {\n		position: relative;\n		transform: scale(0.6);\n		opacity: 0.4;\n		min-width: 20px;\n		animation: s-TdUUvGzjo682-enter 0.3s 0.12s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards;\n	}\n\n	@keyframes s-TdUUvGzjo682-enter {\n		from {\n			transform: scale(0.6);\n			opacity: 0.4;\n		}\n		to {\n			transform: scale(1);\n			opacity: 1;\n		}\n	}\n\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVG9hc3RJY29uLnN2ZWx0ZSIsIm1hcHBpbmdzIjoiO0FBNEJBLENBQUMseUJBQVUsQ0FBQztBQUNaLEVBQUUsa0JBQWtCO0FBQ3BCLEVBQUUsYUFBYTtBQUNmLEVBQUUsdUJBQXVCO0FBQ3pCLEVBQUUsbUJBQW1CO0FBQ3JCLEVBQUUsZUFBZTtBQUNqQixFQUFFLGdCQUFnQjtBQUNsQjs7QUFFQSxDQUFDLHNCQUFPLENBQUM7QUFDVCxFQUFFLGtCQUFrQjtBQUNwQjs7QUFFQSxDQUFDLHdCQUFTLENBQUM7QUFDWCxFQUFFLGtCQUFrQjtBQUNwQixFQUFFLHFCQUFxQjtBQUN2QixFQUFFLFlBQVk7QUFDZCxFQUFFLGVBQWU7QUFDakIsRUFBRSwwQkFBVyxpRUFBaUU7QUFDOUU7O0FBRUEsQ0FBQywwQkFBVztBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZXMiOlsiVG9hc3RJY29uLnN2ZWx0ZSJdfQ== */"
};
function ToastIcon($$anchor, $$props) {
  check_target(new.target);
  push($$props, false, ToastIcon);
  append_styles($$anchor, $$css4);
  const type = mutable_source();
  const icon = mutable_source();
  const iconTheme = mutable_source();
  let toast2 = prop($$props, "toast", 8);
  legacy_pre_effect(
    () => (get(type), get(icon), get(iconTheme), deep_read_state(toast2())),
    () => {
      (($$value) => (set(type, $$value.type), set(icon, $$value.icon), set(iconTheme, $$value.iconTheme)))(toast2());
    }
  );
  legacy_pre_effect_reset();
  var fragment = comment();
  var node = first_child(fragment);
  {
    var consequent = ($$anchor2) => {
      var div = root_1();
      var text2 = child(div, true);
      reset(div);
      template_effect(() => set_text(text2, get(icon)));
      append($$anchor2, div);
    };
    var alternate = ($$anchor2, $$elseif) => {
      {
        var consequent_1 = ($$anchor3) => {
          var fragment_1 = comment();
          var node_1 = first_child(fragment_1);
          component(node_1, () => get(icon), ($$anchor4, $$component) => {
            $$component($$anchor4, {});
          });
          append($$anchor3, fragment_1);
        };
        var alternate_1 = ($$anchor3, $$elseif2) => {
          {
            var consequent_4 = ($$anchor4) => {
              var div_1 = root_5();
              var node_2 = child(div_1);
              LoaderIcon_default(node_2, spread_props(() => get(iconTheme)));
              var node_3 = sibling(node_2, 2);
              {
                var consequent_3 = ($$anchor5) => {
                  var div_2 = root_6();
                  var node_4 = child(div_2);
                  {
                    var consequent_2 = ($$anchor6) => {
                      var fragment_2 = comment();
                      var node_5 = first_child(fragment_2);
                      ErrorIcon_default(node_5, spread_props(() => get(iconTheme)));
                      append($$anchor6, fragment_2);
                    };
                    var alternate_2 = ($$anchor6) => {
                      var fragment_3 = comment();
                      var node_6 = first_child(fragment_3);
                      CheckmarkIcon_default(node_6, spread_props(() => get(iconTheme)));
                      append($$anchor6, fragment_3);
                    };
                    if_block(node_4, ($$render) => {
                      if (strict_equals(get(type), "error")) $$render(consequent_2);
                      else $$render(alternate_2, false);
                    });
                  }
                  reset(div_2);
                  append($$anchor5, div_2);
                };
                if_block(node_3, ($$render) => {
                  if (strict_equals(get(type), "loading", false)) $$render(consequent_3);
                });
              }
              reset(div_1);
              append($$anchor4, div_1);
            };
            if_block(
              $$anchor3,
              ($$render) => {
                if (strict_equals(get(type), "blank", false)) $$render(consequent_4);
              },
              $$elseif2
            );
          }
        };
        if_block(
          $$anchor2,
          ($$render) => {
            if (strict_equals(typeof get(icon), "undefined", false)) $$render(consequent_1);
            else $$render(alternate_1, false);
          },
          $$elseif
        );
      }
    };
    if_block(node, ($$render) => {
      if (strict_equals(typeof get(icon), "string")) $$render(consequent);
      else $$render(alternate, false);
    });
  }
  append($$anchor, fragment);
  return pop({ ...legacy_api() });
}
if (import.meta.hot) {
  ToastIcon = hmr(ToastIcon, () => ToastIcon[HMR].source);
  import.meta.hot.accept((module) => {
    cleanup_styles("s-TdUUvGzjo682");
    module.default[HMR].source = ToastIcon[HMR].source;
    set(ToastIcon[HMR].source, module.default[HMR].original);
  });
}
var ToastIcon_default = ToastIcon;

// node_modules/.pnpm/svelte-french-toast@1.2.0_svelte@5.28.2/node_modules/svelte-french-toast/dist/components/ToastMessage.svelte
ToastMessage[FILENAME] = "node_modules/.pnpm/svelte-french-toast@1.2.0_svelte@5.28.2/node_modules/svelte-french-toast/dist/components/ToastMessage.svelte";
var root4 = add_locations(template(`<div><!></div>`), ToastMessage[FILENAME], [[4, 0]]);
var $$css5 = {
  hash: "s-ZIPnEaZkJo5a",
  code: "\n	.message.s-ZIPnEaZkJo5a {\n		display: flex;\n		justify-content: center;\n		margin: 4px 10px;\n		color: inherit;\n		flex: 1 1 auto;\n		white-space: pre-line;\n	}\n\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVG9hc3RNZXNzYWdlLnN2ZWx0ZSIsIm1hcHBpbmdzIjoiO0FBWUEsQ0FBQyx1QkFBUSxDQUFDO0FBQ1YsRUFBRSxhQUFhO0FBQ2YsRUFBRSx1QkFBdUI7QUFDekIsRUFBRSxnQkFBZ0I7QUFDbEIsRUFBRSxjQUFjO0FBQ2hCLEVBQUUsY0FBYztBQUNoQixFQUFFLHFCQUFxQjtBQUN2QiIsIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZXMiOlsiVG9hc3RNZXNzYWdlLnN2ZWx0ZSJdfQ== */"
};
function ToastMessage($$anchor, $$props) {
  check_target(new.target);
  push($$props, false, ToastMessage);
  append_styles($$anchor, $$css5);
  let toast2 = prop($$props, "toast", 8);
  init();
  var div = root4();
  let attributes;
  var node = child(div);
  {
    var consequent = ($$anchor2) => {
      var text2 = text();
      template_effect(() => set_text(text2, toast2().message));
      append($$anchor2, text2);
    };
    var alternate = ($$anchor2) => {
      var fragment_1 = comment();
      var node_1 = first_child(fragment_1);
      component(node_1, () => toast2().message, ($$anchor3, $$component) => {
        $$component($$anchor3, {
          get toast() {
            return toast2();
          }
        });
      });
      append($$anchor2, fragment_1);
    };
    if_block(node, ($$render) => {
      if (strict_equals(typeof toast2().message, "string")) $$render(consequent);
      else $$render(alternate, false);
    });
  }
  reset(div);
  template_effect(() => attributes = set_attributes(div, attributes, { class: "message", ...toast2().ariaProps }, "s-ZIPnEaZkJo5a"));
  append($$anchor, div);
  return pop({ ...legacy_api() });
}
if (import.meta.hot) {
  ToastMessage = hmr(ToastMessage, () => ToastMessage[HMR].source);
  import.meta.hot.accept((module) => {
    cleanup_styles("s-ZIPnEaZkJo5a");
    module.default[HMR].source = ToastMessage[HMR].source;
    set(ToastMessage[HMR].source, module.default[HMR].original);
  });
}
var ToastMessage_default = ToastMessage;

// node_modules/.pnpm/svelte-french-toast@1.2.0_svelte@5.28.2/node_modules/svelte-french-toast/dist/components/ToastBar.svelte
ToastBar[FILENAME] = "node_modules/.pnpm/svelte-french-toast@1.2.0_svelte@5.28.2/node_modules/svelte-french-toast/dist/components/ToastBar.svelte";
var root_52 = add_locations(template(`<!> <!>`, 1), ToastBar[FILENAME], []);
var root5 = add_locations(template(`<div><!></div>`), ToastBar[FILENAME], [[18, 0]]);
var $$css6 = {
  hash: "s-N1q1msP398Kb",
  code: "\n	@keyframes s-N1q1msP398Kb-enterAnimation {\n		0% {\n			transform: translate3d(0, calc(var(--factor) * -200%), 0) scale(0.6);\n			opacity: 0.5;\n		}\n		100% {\n			transform: translate3d(0, 0, 0) scale(1);\n			opacity: 1;\n		}\n	}\n\n	@keyframes s-N1q1msP398Kb-exitAnimation {\n		0% {\n			transform: translate3d(0, 0, -1px) scale(1);\n			opacity: 1;\n		}\n		100% {\n			transform: translate3d(0, calc(var(--factor) * -150%), -1px) scale(0.6);\n			opacity: 0;\n		}\n	}\n\n	@keyframes s-N1q1msP398Kb-fadeInAnimation {\n		0% {\n			opacity: 0;\n		}\n		100% {\n			opacity: 1;\n		}\n	}\n\n	@keyframes s-N1q1msP398Kb-fadeOutAnimation {\n		0% {\n			opacity: 1;\n		}\n		100% {\n			opacity: 0;\n		}\n	}\n\n	.base.s-N1q1msP398Kb {\n		display: flex;\n		align-items: center;\n		background: #fff;\n		color: #363636;\n		line-height: 1.3;\n		will-change: transform;\n		box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1), 0 3px 3px rgba(0, 0, 0, 0.05);\n		max-width: 350px;\n		pointer-events: auto;\n		padding: 8px 10px;\n		border-radius: 8px;\n	}\n\n	.transparent.s-N1q1msP398Kb {\n		opacity: 0;\n	}\n\n	.enter.s-N1q1msP398Kb {\n		animation: s-N1q1msP398Kb-enterAnimation 0.35s cubic-bezier(0.21, 1.02, 0.73, 1) forwards;\n	}\n\n	.exit.s-N1q1msP398Kb {\n		animation: s-N1q1msP398Kb-exitAnimation 0.4s cubic-bezier(0.06, 0.71, 0.55, 1) forwards;\n	}\n\n	.fadeIn.s-N1q1msP398Kb {\n		animation: s-N1q1msP398Kb-fadeInAnimation 0.35s cubic-bezier(0.21, 1.02, 0.73, 1) forwards;\n	}\n\n	.fadeOut.s-N1q1msP398Kb {\n		animation: s-N1q1msP398Kb-fadeOutAnimation 0.4s cubic-bezier(0.06, 0.71, 0.55, 1) forwards;\n	}\n\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVG9hc3RCYXIuc3ZlbHRlIiwibWFwcGluZ3MiOiI7QUFvQ0EsQ0FBQywwQkFBVztBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxDQUFDLDBCQUFXO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLENBQUMsMEJBQVc7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxDQUFDLDBCQUFXO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsQ0FBQyxvQkFBSyxDQUFDO0FBQ1AsRUFBRSxhQUFhO0FBQ2YsRUFBRSxtQkFBbUI7QUFDckIsRUFBRSxnQkFBZ0I7QUFDbEIsRUFBRSxjQUFjO0FBQ2hCLEVBQUUsZ0JBQWdCO0FBQ2xCLEVBQUUsc0JBQXNCO0FBQ3hCLEVBQUUsd0VBQXdFO0FBQzFFLEVBQUUsZ0JBQWdCO0FBQ2xCLEVBQUUsb0JBQW9CO0FBQ3RCLEVBQUUsaUJBQWlCO0FBQ25CLEVBQUUsa0JBQWtCO0FBQ3BCOztBQUVBLENBQUMsMkJBQVksQ0FBQztBQUNkLEVBQUUsVUFBVTtBQUNaOztBQUVBLENBQUMscUJBQU0sQ0FBQztBQUNSLEVBQUUsMEJBQVcsK0RBQStEO0FBQzVFOztBQUVBLENBQUMsb0JBQUssQ0FBQztBQUNQLEVBQUUsMEJBQVcsNkRBQTZEO0FBQzFFOztBQUVBLENBQUMsc0JBQU8sQ0FBQztBQUNULEVBQUUsMEJBQVcsZ0VBQWdFO0FBQzdFOztBQUVBLENBQUMsdUJBQVEsQ0FBQztBQUNWLEVBQUUsMEJBQVcsZ0VBQWdFO0FBQzdFIiwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlcyI6WyJUb2FzdEJhci5zdmVsdGUiXX0= */"
};
function ToastBar($$anchor, $$props) {
  check_target(new.target);
  push($$props, false, ToastBar);
  append_styles($$anchor, $$css6);
  let toast2 = prop($$props, "toast", 8);
  let position = prop($$props, "position", 24, () => void 0);
  let style = prop($$props, "style", 8, "");
  let Component = prop($$props, "Component", 24, () => void 0);
  let factor = mutable_source();
  let animation = mutable_source();
  legacy_pre_effect(
    () => (deep_read_state(toast2()), deep_read_state(position()), prefersReducedMotion),
    () => {
      const top = (toast2().position || position() || "top-center").includes("top");
      set(factor, top ? 1 : -1);
      const [enter, exit] = prefersReducedMotion() ? ["fadeIn", "fadeOut"] : ["enter", "exit"];
      set(animation, toast2().visible ? enter : exit);
    }
  );
  legacy_pre_effect_reset();
  init();
  var div = root5();
  let styles;
  var node = child(div);
  {
    var consequent = ($$anchor2) => {
      var fragment = comment();
      var node_1 = first_child(fragment);
      component(node_1, Component, ($$anchor3, $$component) => {
        $$component($$anchor3, {
          $$slots: {
            icon: ($$anchor4, $$slotProps) => {
              var fragment_1 = comment();
              var node_2 = first_child(fragment_1);
              ToastIcon_default(node_2, {
                get toast() {
                  return toast2();
                },
                slot: "icon"
              });
              append($$anchor4, fragment_1);
            },
            message: ($$anchor4, $$slotProps) => {
              var fragment_2 = comment();
              var node_3 = first_child(fragment_2);
              ToastMessage_default(node_3, {
                get toast() {
                  return toast2();
                },
                slot: "message"
              });
              append($$anchor4, fragment_2);
            }
          }
        });
      });
      append($$anchor2, fragment);
    };
    var alternate = ($$anchor2) => {
      var fragment_3 = comment();
      var node_4 = first_child(fragment_3);
      slot(
        node_4,
        $$props,
        "default",
        {
          ToastIcon: ToastIcon_default,
          ToastMessage: ToastMessage_default,
          get toast() {
            return toast2();
          }
        },
        ($$anchor3) => {
          var fragment_4 = root_52();
          var node_5 = first_child(fragment_4);
          ToastIcon_default(node_5, {
            get toast() {
              return toast2();
            }
          });
          var node_6 = sibling(node_5, 2);
          ToastMessage_default(node_6, {
            get toast() {
              return toast2();
            }
          });
          append($$anchor3, fragment_4);
        }
      );
      append($$anchor2, fragment_3);
    };
    if_block(node, ($$render) => {
      if (Component()) $$render(consequent);
      else $$render(alternate, false);
    });
  }
  reset(div);
  template_effect(() => {
    set_class(div, 1, `base ${(toast2().height ? get(animation) : "transparent") ?? ""} ${(toast2().className || "") ?? ""}`, "s-N1q1msP398Kb");
    styles = set_style(div, `${style() ?? ""}; ${toast2().style ?? ""}`, styles, { "--factor": get(factor) });
  });
  append($$anchor, div);
  return pop({ ...legacy_api() });
}
if (import.meta.hot) {
  ToastBar = hmr(ToastBar, () => ToastBar[HMR].source);
  import.meta.hot.accept((module) => {
    cleanup_styles("s-N1q1msP398Kb");
    module.default[HMR].source = ToastBar[HMR].source;
    set(ToastBar[HMR].source, module.default[HMR].original);
  });
}
var ToastBar_default = ToastBar;

// node_modules/.pnpm/svelte-french-toast@1.2.0_svelte@5.28.2/node_modules/svelte-french-toast/dist/components/ToastWrapper.svelte
ToastWrapper[FILENAME] = "node_modules/.pnpm/svelte-french-toast@1.2.0_svelte@5.28.2/node_modules/svelte-french-toast/dist/components/ToastWrapper.svelte";
var root6 = add_locations(template(`<div><!></div>`), ToastWrapper[FILENAME], [[21, 0]]);
var $$css7 = {
  hash: "s-_Zxsbaj1TfAZ",
  code: "\n	.wrapper.s-_Zxsbaj1TfAZ {\n		left: 0;\n		right: 0;\n		display: flex;\n		position: absolute;\n		transform: translateY(calc(var(--offset, 16px) * var(--factor) * 1px));\n	}\n\n	.transition.s-_Zxsbaj1TfAZ {\n		transition: all 230ms cubic-bezier(0.21, 1.02, 0.73, 1);\n	}\n\n	.active.s-_Zxsbaj1TfAZ {\n		z-index: 9999;\n	}\n\n	.active.s-_Zxsbaj1TfAZ > * {\n		pointer-events: auto;\n	}\n\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVG9hc3RXcmFwcGVyLnN2ZWx0ZSIsIm1hcHBpbmdzIjoiO0FBeUNBLENBQUMsdUJBQVEsQ0FBQztBQUNWLEVBQUUsT0FBTztBQUNULEVBQUUsUUFBUTtBQUNWLEVBQUUsYUFBYTtBQUNmLEVBQUUsa0JBQWtCO0FBQ3BCLEVBQUUsc0VBQXNFO0FBQ3hFOztBQUVBLENBQUMsMEJBQVcsQ0FBQztBQUNiLEVBQUUsdURBQXVEO0FBQ3pEOztBQUVBLENBQUMsc0JBQU8sQ0FBQztBQUNULEVBQUUsYUFBYTtBQUNmOztBQUVBLENBQUMsc0JBQU8sQ0FBQyxDQUFDLENBQVMsQ0FBRSxDQUFDO0FBQ3RCLEVBQUUsb0JBQW9CO0FBQ3RCIiwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlcyI6WyJUb2FzdFdyYXBwZXIuc3ZlbHRlIl19 */"
};
function ToastWrapper($$anchor, $$props) {
  check_target(new.target);
  push($$props, false, ToastWrapper);
  append_styles($$anchor, $$css7);
  const top = mutable_source();
  const bottom = mutable_source();
  const factor = mutable_source();
  const justifyContent = mutable_source();
  let toast2 = prop($$props, "toast", 8);
  let setHeight = prop($$props, "setHeight", 8);
  let wrapperEl = mutable_source();
  onMount(() => {
    setHeight()(get(wrapperEl).getBoundingClientRect().height);
  });
  legacy_pre_effect(() => deep_read_state(toast2()), () => {
    var _a;
    set(top, ((_a = toast2().position) == null ? void 0 : _a.includes("top")) ? 0 : null);
  });
  legacy_pre_effect(() => deep_read_state(toast2()), () => {
    var _a;
    set(bottom, ((_a = toast2().position) == null ? void 0 : _a.includes("bottom")) ? 0 : null);
  });
  legacy_pre_effect(() => deep_read_state(toast2()), () => {
    var _a;
    set(factor, ((_a = toast2().position) == null ? void 0 : _a.includes("top")) ? 1 : -1);
  });
  legacy_pre_effect(() => deep_read_state(toast2()), () => {
    var _a, _b, _c;
    set(justifyContent, ((_a = toast2().position) == null ? void 0 : _a.includes("center")) && "center" || (((_b = toast2().position) == null ? void 0 : _b.includes("right")) || ((_c = toast2().position) == null ? void 0 : _c.includes("end"))) && "flex-end" || null);
  });
  legacy_pre_effect_reset();
  init();
  var div = root6();
  let classes;
  let styles;
  var node = child(div);
  {
    var consequent = ($$anchor2) => {
      var fragment = comment();
      var node_1 = first_child(fragment);
      ToastMessage_default(node_1, {
        get toast() {
          return toast2();
        }
      });
      append($$anchor2, fragment);
    };
    var alternate = ($$anchor2) => {
      var fragment_1 = comment();
      var node_2 = first_child(fragment_1);
      slot(
        node_2,
        $$props,
        "default",
        {
          get toast() {
            return toast2();
          }
        },
        ($$anchor3) => {
          var fragment_2 = comment();
          var node_3 = first_child(fragment_2);
          ToastBar_default(node_3, {
            get toast() {
              return toast2();
            },
            get position() {
              return toast2().position;
            }
          });
          append($$anchor3, fragment_2);
        }
      );
      append($$anchor2, fragment_1);
    };
    if_block(node, ($$render) => {
      if (strict_equals(toast2().type, "custom")) $$render(consequent);
      else $$render(alternate, false);
    });
  }
  reset(div);
  bind_this(div, ($$value) => set(wrapperEl, $$value), () => get(wrapperEl));
  template_effect(
    ($0) => {
      classes = set_class(div, 1, "wrapper s-_Zxsbaj1TfAZ", null, classes, $0);
      styles = set_style(div, "", styles, {
        "--factor": get(factor),
        "--offset": toast2().offset,
        top: get(top),
        bottom: get(bottom),
        "justify-content": get(justifyContent)
      });
    },
    [
      () => ({
        active: toast2().visible,
        transition: !prefersReducedMotion()
      })
    ],
    derived_safe_equal
  );
  append($$anchor, div);
  return pop({ ...legacy_api() });
}
if (import.meta.hot) {
  ToastWrapper = hmr(ToastWrapper, () => ToastWrapper[HMR].source);
  import.meta.hot.accept((module) => {
    cleanup_styles("s-_Zxsbaj1TfAZ");
    module.default[HMR].source = ToastWrapper[HMR].source;
    set(ToastWrapper[HMR].source, module.default[HMR].original);
  });
}
var ToastWrapper_default = ToastWrapper;

// node_modules/.pnpm/svelte-french-toast@1.2.0_svelte@5.28.2/node_modules/svelte-french-toast/dist/components/Toaster.svelte
Toaster[FILENAME] = "node_modules/.pnpm/svelte-french-toast@1.2.0_svelte@5.28.2/node_modules/svelte-french-toast/dist/components/Toaster.svelte";
var root7 = add_locations(template(`<div role="alert"></div>`), Toaster[FILENAME], [[23, 0]]);
var $$css8 = {
  hash: "s-3sZv_4s7-7AU",
  code: "\n	.toaster.s-3sZv_4s7-7AU {\n		--default-offset: 16px;\n\n		position: fixed;\n		z-index: 9999;\n		top: var(--default-offset);\n		left: var(--default-offset);\n		right: var(--default-offset);\n		bottom: var(--default-offset);\n		pointer-events: none;\n	}\n\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVG9hc3Rlci5zdmVsdGUiLCJtYXBwaW5ncyI6IjtBQW1DQSxDQUFDLHVCQUFRLENBQUM7QUFDVixFQUFFLHNCQUFzQjs7QUFFeEIsRUFBRSxlQUFlO0FBQ2pCLEVBQUUsYUFBYTtBQUNmLEVBQUUsMEJBQTBCO0FBQzVCLEVBQUUsMkJBQTJCO0FBQzdCLEVBQUUsNEJBQTRCO0FBQzlCLEVBQUUsNkJBQTZCO0FBQy9CLEVBQUUsb0JBQW9CO0FBQ3RCIiwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlcyI6WyJUb2FzdGVyLnN2ZWx0ZSJdfQ== */"
};
function Toaster($$anchor, $$props) {
  check_target(new.target);
  push($$props, false, Toaster);
  append_styles($$anchor, $$css8);
  const [$$stores, $$cleanup] = setup_stores();
  const $toasts = () => (validate_store(toasts2, "toasts"), store_get(toasts2, "$toasts", $$stores));
  let reverseOrder = prop($$props, "reverseOrder", 8, false);
  let position = prop($$props, "position", 8, "top-center");
  let toastOptions = prop($$props, "toastOptions", 24, () => void 0);
  let gutter = prop($$props, "gutter", 8, 8);
  let containerStyle = prop($$props, "containerStyle", 24, () => void 0);
  let containerClassName = prop($$props, "containerClassName", 24, () => void 0);
  const { toasts: toasts2, handlers: handlers2 } = useToaster(toastOptions());
  let _toasts = mutable_source();
  legacy_pre_effect(
    () => ($toasts(), deep_read_state(position()), deep_read_state(reverseOrder()), deep_read_state(gutter())),
    () => {
      set(_toasts, $toasts().map((toast2) => ({
        ...toast2,
        position: toast2.position || position(),
        offset: handlers2.calculateOffset(toast2, $toasts(), {
          reverseOrder: reverseOrder(),
          gutter: gutter(),
          defaultPosition: position()
        })
      })));
    }
  );
  legacy_pre_effect_reset();
  init();
  var div = root7();
  validate_each_keys(() => get(_toasts), (toast2) => toast2.id);
  each(div, 5, () => get(_toasts), (toast2) => toast2.id, ($$anchor2, toast2) => {
    var fragment = comment();
    var node = first_child(fragment);
    ToastWrapper_default(node, {
      get toast() {
        return get(toast2);
      },
      setHeight: (height) => handlers2.updateHeight(get(toast2).id, height)
    });
    append($$anchor2, fragment);
  });
  reset(div);
  template_effect(() => {
    set_class(div, 1, `toaster ${(containerClassName() || "") ?? ""}`, "s-3sZv_4s7-7AU");
    set_style(div, containerStyle());
  });
  event("mouseenter", div, function(...$$args) {
    apply(() => handlers2.startPause, this, $$args, Toaster, [26, 16]);
  });
  event("mouseleave", div, function(...$$args) {
    apply(() => handlers2.endPause, this, $$args, Toaster, [27, 16]);
  });
  append($$anchor, div);
  var $$pop = pop({ ...legacy_api() });
  $$cleanup();
  return $$pop;
}
if (import.meta.hot) {
  Toaster = hmr(Toaster, () => Toaster[HMR].source);
  import.meta.hot.accept((module) => {
    cleanup_styles("s-3sZv_4s7-7AU");
    module.default[HMR].source = Toaster[HMR].source;
    set(Toaster[HMR].source, module.default[HMR].original);
  });
}
var Toaster_default = Toaster;

// node_modules/.pnpm/svelte-french-toast@1.2.0_svelte@5.28.2/node_modules/svelte-french-toast/dist/index.js
var dist_default = toast_default;
export {
  CheckmarkIcon_default as CheckmarkIcon,
  ErrorIcon_default as ErrorIcon,
  LoaderIcon_default as LoaderIcon,
  ToastBar_default as ToastBar,
  ToastIcon_default as ToastIcon,
  Toaster_default as Toaster,
  dist_default as default,
  resolveValue,
  toast_default as toast,
  useToaster,
  useToasterStore
};
//# sourceMappingURL=svelte-french-toast.js.map
