{
  "version": 3,
  "sources": ["../../.pnpm/cookie@0.6.0/node_modules/cookie/index.js", "../../.pnpm/@saleor+auth-sdk@1.0.2/node_modules/@saleor/auth-sdk/chunk-BZFBMGPG.mjs", "../../.pnpm/@saleor+auth-sdk@1.0.2/node_modules/@saleor/auth-sdk/chunk-263DHBMK.mjs", "../../.pnpm/@saleor+auth-sdk@1.0.2/node_modules/@saleor/auth-sdk/chunk-IRFIDVVY.mjs", "../../.pnpm/@saleor+auth-sdk@1.0.2/node_modules/@saleor/auth-sdk/chunk-K5MTKW5C.mjs", "../../.pnpm/@saleor+auth-sdk@1.0.2/node_modules/@saleor/auth-sdk/chunk-7JTFMRQS.mjs", "../../.pnpm/@saleor+auth-sdk@1.0.2/node_modules/@saleor/auth-sdk/chunk-VGWXFU6P.mjs", "../../.pnpm/@saleor+auth-sdk@1.0.2/node_modules/@saleor/auth-sdk/chunk-IYOUKX7K.mjs", "../../.pnpm/@saleor+auth-sdk@1.0.2/node_modules/@saleor/auth-sdk/chunk-KLIEZ4V4.mjs"],
  "sourcesContent": ["/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar __toString = Object.prototype.toString\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var dec = opt.decode || decode;\n\n  var index = 0\n  while (index < str.length) {\n    var eqIdx = str.indexOf('=', index)\n\n    // no more cookie pairs\n    if (eqIdx === -1) {\n      break\n    }\n\n    var endIdx = str.indexOf(';', index)\n\n    if (endIdx === -1) {\n      endIdx = str.length\n    } else if (endIdx < eqIdx) {\n      // backtrack on prior semicolon\n      index = str.lastIndexOf(';', eqIdx - 1) + 1\n      continue\n    }\n\n    var key = str.slice(index, eqIdx).trim()\n\n    // only assign once\n    if (undefined === obj[key]) {\n      var val = str.slice(eqIdx + 1, endIdx).trim()\n\n      // quoted values\n      if (val.charCodeAt(0) === 0x22) {\n        val = val.slice(1, -1)\n      }\n\n      obj[key] = tryDecode(val, dec);\n    }\n\n    index = endIdx + 1\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\n      throw new TypeError('option maxAge is invalid')\n    }\n\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    var expires = opt.expires\n\n    if (!isDate(expires) || isNaN(expires.valueOf())) {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + expires.toUTCString()\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.partitioned) {\n    str += '; Partitioned'\n  }\n\n  if (opt.priority) {\n    var priority = typeof opt.priority === 'string'\n      ? opt.priority.toLowerCase()\n      : opt.priority\n\n    switch (priority) {\n      case 'low':\n        str += '; Priority=Low'\n        break\n      case 'medium':\n        str += '; Priority=Medium'\n        break\n      case 'high':\n        str += '; Priority=High'\n        break\n      default:\n        throw new TypeError('option priority is invalid')\n    }\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * URL-decode string value. Optimized to skip native call when no %.\n *\n * @param {string} str\n * @returns {string}\n */\n\nfunction decode (str) {\n  return str.indexOf('%') !== -1\n    ? decodeURIComponent(str)\n    : str\n}\n\n/**\n * URL-encode value.\n *\n * @param {string} val\n * @returns {string}\n */\n\nfunction encode (val) {\n  return encodeURIComponent(val)\n}\n\n/**\n * Determine if value is a Date.\n *\n * @param {*} val\n * @private\n */\n\nfunction isDate (val) {\n  return __toString.call(val) === '[object Date]' ||\n    val instanceof Date\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n", "// src/SaleorAccessTokenStorageHandler.ts\nvar getAccessTokenKey = (prefix) => [prefix, \"saleor_auth_access_token\"].filter(Boolean).join(\"+\");\nvar SaleorAccessTokenStorageHandler = class {\n  constructor(storage, prefix) {\n    this.storage = storage;\n    this.prefix = prefix;\n  }\n  getAccessToken = () => {\n    const key = getAccessTokenKey(this.prefix);\n    return this.storage.getItem(key);\n  };\n  setAccessToken = (token) => {\n    const key = getAccessTokenKey(this.prefix);\n    return this.storage.setItem(key, token);\n  };\n  clearAuthStorage = () => {\n    const key = getAccessTokenKey(this.prefix);\n    return this.storage.removeItem(key);\n  };\n};\n\nexport {\n  getAccessTokenKey,\n  SaleorAccessTokenStorageHandler\n};\n", "// src/SaleorRefreshTokenStorageHandler.ts\nvar getStorageAuthEventKey = (prefix) => [prefix, \"saleor_storage_auth_change\"].filter(Boolean).join(\"+\");\nvar getStorageAuthStateKey = (prefix) => [prefix, \"saleor_auth_module_auth_state\"].filter(Boolean).join(\"+\");\nvar getRefreshTokenKey = (prefix) => [prefix, \"saleor_auth_module_refresh_token\"].filter(Boolean).join(\"+\");\nvar SaleorRefreshTokenStorageHandler = class {\n  constructor(storage, prefix) {\n    this.storage = storage;\n    this.prefix = prefix;\n    if (typeof window !== \"undefined\") {\n      window.addEventListener(\"storage\", this.handleStorageChange);\n    }\n  }\n  handleStorageChange = (event) => {\n    const { oldValue, newValue, type, key } = event;\n    if (oldValue === newValue || type !== \"storage\" || key !== getStorageAuthStateKey(this.prefix)) {\n      return;\n    }\n    this.sendAuthStateEvent(newValue);\n  };\n  cleanup = () => {\n    if (typeof window !== \"undefined\") {\n      window.removeEventListener(\"storage\", this.handleStorageChange);\n    }\n  };\n  /* auth state */\n  sendAuthStateEvent = (authState) => {\n    if (typeof window !== \"undefined\") {\n      const event = new CustomEvent(getStorageAuthEventKey(this.prefix), {\n        detail: { authState }\n      });\n      window.dispatchEvent(event);\n    }\n  };\n  getAuthState = () => this.storage.getItem(getStorageAuthStateKey(this.prefix)) || \"signedOut\";\n  setAuthState = (authState) => {\n    this.storage.setItem(getStorageAuthStateKey(this.prefix), authState);\n    this.sendAuthStateEvent(authState);\n  };\n  /* refresh token */\n  getRefreshToken = () => this.storage.getItem(getRefreshTokenKey(this.prefix)) || null;\n  setRefreshToken = (token) => {\n    this.storage.setItem(getRefreshTokenKey(this.prefix), token);\n  };\n  /* performed on logout */\n  clearAuthStorage = () => {\n    this.setAuthState(\"signedOut\");\n    this.storage.removeItem(getRefreshTokenKey(this.prefix));\n  };\n};\n\nexport {\n  getStorageAuthEventKey,\n  getStorageAuthStateKey,\n  getRefreshTokenKey,\n  SaleorRefreshTokenStorageHandler\n};\n", "// src/utils.ts\nvar MILLI_MULTIPLYER = 1e3;\nvar decodeToken = (token) => {\n  const tokenParts = token.split(\".\");\n  const decodedTokenData = Buffer.from(tokenParts[1] || \"\", \"base64\").toString();\n  const parsedTokenData = JSON.parse(decodedTokenData);\n  return parsedTokenData;\n};\nvar getTokenExpiry = (token) => {\n  const parsedTokenData = decodeToken(token);\n  return parsedTokenData.exp * MILLI_MULTIPLYER || 0;\n};\nvar getTokenIss = (token) => {\n  const parsedTokenData = decodeToken(token);\n  return parsedTokenData.iss;\n};\nvar isExpiredToken = (token, tokenGracePeriod) => {\n  return getTokenExpiry(token) - tokenGracePeriod <= Date.now();\n};\nvar getRequestData = (query, variables, requestInit) => ({\n  ...requestInit,\n  method: \"POST\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    query,\n    variables\n  })\n});\nvar InvariantError = class extends Error {\n  constructor(message) {\n    super(message);\n  }\n};\nfunction invariant(condition, message) {\n  if (!condition) {\n    throw new InvariantError(`Invariant Violation: ${message || \"\"}`);\n  }\n}\n\nexport {\n  getTokenIss,\n  isExpiredToken,\n  getRequestData,\n  InvariantError,\n  invariant\n};\n", "// src/graphql.ts\nvar TypedDocumentString = class extends String {\n  constructor(value, __meta__) {\n    super(value);\n    this.value = value;\n    this.__meta__ = __meta__;\n  }\n  __apiType;\n  toString() {\n    return this.value;\n  }\n};\n\nexport {\n  TypedDocumentString\n};\n", "import {\n  TypedDocumentString\n} from \"./chunk-K5MTKW5C.mjs\";\n\n// src/mutations.ts\nvar accountErrorFragment = (\n  /* graphql */\n  `\n  fragment AccountErrorFragment on AccountError {\n    code\n    field\n    message\n  }\n`\n);\nvar TOKEN_REFRESH = new TypedDocumentString(\n  /* graphql */\n  `\n  ${accountErrorFragment}\n  mutation refreshToken($refreshToken: String!) {\n    tokenRefresh(refreshToken: $refreshToken) {\n      token\n      errors {\n        ...AccountErrorFragment\n      }\n    }\n  }\n`\n);\nvar TOKEN_CREATE = new TypedDocumentString(\n  /* graphql */\n  `\n  mutation tokenCreate($email: String!, $password: String!) {\n    tokenCreate(email: $email, password: $password) {\n      token\n      refreshToken\n      errors {\n        message\n        field\n        code\n      }\n    }\n  }\n`\n);\nvar PASSWORD_RESET = new TypedDocumentString(\n  /* graphql */\n  `\n  mutation passwordReset($email: String!, $password: String!, $token: String!) {\n    setPassword(email: $email, password: $password, token: $token) {\n      token\n      refreshToken\n      errors {\n        message\n        field\n        code\n      }\n    }\n  }\n`\n);\nvar ExternalAuthenticationURL = new TypedDocumentString(\n  /* graphql */\n  `\n  mutation externalAuthenticationUrl($pluginId: String!, $input: JSONString!) {\n    externalAuthenticationUrl(pluginId: $pluginId, input: $input) {\n      authenticationData\n      errors {\n        code\n        field\n        message\n      }\n    }\n  }\n`\n);\nvar ExternalObtainAccessTokens = new TypedDocumentString(\n  /* graphql */\n  `\n  mutation AuthObtainAccessToken($pluginId: String!, $input: JSONString!) {\n    externalObtainAccessTokens(pluginId: $pluginId, input: $input) {\n      token\n      refreshToken\n      user {\n        id\n        email\n      }\n      errors {\n        field\n        code\n        message\n      }\n    }\n  }\n`\n);\n\nexport {\n  accountErrorFragment,\n  TOKEN_REFRESH,\n  TOKEN_CREATE,\n  PASSWORD_RESET,\n  ExternalAuthenticationURL,\n  ExternalObtainAccessTokens\n};\n", "import {\n  SaleorAccessTokenStorageHandler\n} from \"./chunk-BZFBMGPG.mjs\";\nimport {\n  SaleorRefreshTokenStorageHandler\n} from \"./chunk-263DHBMK.mjs\";\nimport {\n  getRequestData,\n  getTokenIss,\n  invariant,\n  isExpiredToken\n} from \"./chunk-IRFIDVVY.mjs\";\nimport {\n  PASSWORD_RESET,\n  TOKEN_CREATE,\n  TOKEN_REFRESH\n} from \"./chunk-7JTFMRQS.mjs\";\n\n// src/SaleorAuthClient.ts\nimport cookie from \"cookie\";\nvar SaleorAuthClient = class {\n  // we'll assume a generous time of 2 seconds for api to\n  // process our request\n  tokenGracePeriod = 2e3;\n  tokenRefreshPromise = null;\n  onAuthRefresh;\n  saleorApiUrl;\n  /**\n   * Persistent storage (for refresh token)\n   */\n  refreshTokenStorage;\n  /**\n   * Non-persistent storage for access token\n   */\n  acessTokenStorage;\n  defaultRequestInit;\n  /**\n   * Use ths method to clear event listeners from storageHandler\n   *  @example\n   *  ```jsx\n   *  useEffect(() => {\n   *    return () => {\n   *      SaleorAuthClient.cleanup();\n   *    }\n   *  }, [])\n   *  ```\n   */\n  constructor({\n    saleorApiUrl,\n    refreshTokenStorage,\n    accessTokenStorage,\n    onAuthRefresh,\n    tokenGracePeriod,\n    defaultRequestInit\n  }) {\n    this.defaultRequestInit = defaultRequestInit;\n    if (tokenGracePeriod) {\n      this.tokenGracePeriod = tokenGracePeriod;\n    }\n    this.onAuthRefresh = onAuthRefresh;\n    this.saleorApiUrl = saleorApiUrl;\n    const refreshTokenRepo = refreshTokenStorage ?? (typeof window !== \"undefined\" ? window.localStorage : void 0);\n    this.refreshTokenStorage = refreshTokenRepo ? new SaleorRefreshTokenStorageHandler(refreshTokenRepo, saleorApiUrl) : null;\n    const accessTokenRepo = accessTokenStorage ?? getInMemoryAccessTokenStorage();\n    this.acessTokenStorage = new SaleorAccessTokenStorageHandler(accessTokenRepo, saleorApiUrl);\n  }\n  cleanup = () => {\n    this.refreshTokenStorage?.cleanup();\n  };\n  runAuthorizedRequest = (input, init, additionalParams) => {\n    const token = this.acessTokenStorage.getAccessToken();\n    if (!token) {\n      return fetch(input, init);\n    }\n    const headers = init?.headers || {};\n    const getURL = (input2) => {\n      if (typeof input2 === \"string\") {\n        return input2;\n      } else if (\"url\" in input2) {\n        return input2.url;\n      } else {\n        return input2.href;\n      }\n    };\n    const iss = getTokenIss(token);\n    const issuerAndDomainMatch = getURL(input) === iss;\n    const shouldAddAuthorizationHeader = issuerAndDomainMatch || additionalParams?.allowPassingTokenToThirdPartyDomains;\n    if (!issuerAndDomainMatch) {\n      if (shouldAddAuthorizationHeader) {\n        console.warn(\n          \"Token's `iss` and request URL do not match but `allowPassingTokenToThirdPartyDomains` was specified.\"\n        );\n      } else {\n        console.warn(\n          \"Token's `iss` and request URL do not match. Not adding `Authorization` header to the request.\"\n        );\n      }\n    }\n    return fetch(input, {\n      ...init,\n      headers: shouldAddAuthorizationHeader ? { ...headers, Authorization: `Bearer ${token}` } : headers\n    });\n  };\n  handleRequestWithTokenRefresh = async (input, requestInit, additionalParams) => {\n    const refreshToken = this.refreshTokenStorage?.getRefreshToken();\n    invariant(refreshToken, \"Missing refresh token in token refresh handler\");\n    const accessToken = this.acessTokenStorage.getAccessToken();\n    if (accessToken && !isExpiredToken(accessToken, this.tokenGracePeriod)) {\n      return this.fetchWithAuth(input, requestInit, additionalParams);\n    }\n    this.onAuthRefresh?.(true);\n    if (this.tokenRefreshPromise) {\n      const response = await this.tokenRefreshPromise;\n      const res = await response.clone().json();\n      const {\n        errors: graphqlErrors,\n        data: {\n          tokenRefresh: { errors, token }\n        }\n      } = res;\n      this.onAuthRefresh?.(false);\n      if (errors?.length || graphqlErrors?.length || !token) {\n        this.tokenRefreshPromise = null;\n        this.refreshTokenStorage?.clearAuthStorage();\n        return fetch(input, requestInit);\n      }\n      this.refreshTokenStorage?.setAuthState(\"signedIn\");\n      this.acessTokenStorage.setAccessToken(token);\n      this.tokenRefreshPromise = null;\n      return this.runAuthorizedRequest(input, requestInit, additionalParams);\n    }\n    this.tokenRefreshPromise = fetch(\n      this.saleorApiUrl,\n      getRequestData(TOKEN_REFRESH, { refreshToken }, { ...this.defaultRequestInit, ...requestInit })\n    );\n    return this.fetchWithAuth(input, requestInit, additionalParams);\n  };\n  handleSignIn = async (response) => {\n    const readResponse = await response.json();\n    const responseData = \"tokenCreate\" in readResponse.data ? readResponse.data.tokenCreate : readResponse.data.setPassword;\n    if (!responseData) {\n      return readResponse;\n    }\n    const { errors, token, refreshToken } = responseData;\n    if (!token || errors.length) {\n      this.refreshTokenStorage?.setAuthState(\"signedOut\");\n      return readResponse;\n    }\n    if (token) {\n      this.acessTokenStorage.setAccessToken(token);\n    }\n    if (refreshToken) {\n      this.refreshTokenStorage?.setRefreshToken(refreshToken);\n    }\n    this.refreshTokenStorage?.setAuthState(\"signedIn\");\n    return readResponse;\n  };\n  /**\n   * @param additionalParams\n   * @param additionalParams.allowPassingTokenToThirdPartyDomains if set to true, the `Authorization` header will be added to the request even if the token's `iss` and request URL do not match\n   */\n  fetchWithAuth = async (input, init, additionalParams) => {\n    const refreshToken = this.refreshTokenStorage?.getRefreshToken();\n    if (!this.acessTokenStorage.getAccessToken() && typeof document !== \"undefined\") {\n      const tokenFromCookie = cookie.parse(document.cookie).token ?? null;\n      if (tokenFromCookie) {\n        this.acessTokenStorage.setAccessToken(tokenFromCookie);\n      }\n      document.cookie = cookie.serialize(\"token\", \"\", { expires: /* @__PURE__ */ new Date(0), path: \"/\" });\n    }\n    const accessToken = this.acessTokenStorage.getAccessToken();\n    if (accessToken && !isExpiredToken(accessToken, this.tokenGracePeriod)) {\n      return this.runAuthorizedRequest(input, init, additionalParams);\n    }\n    if (refreshToken) {\n      return this.handleRequestWithTokenRefresh(input, init, additionalParams);\n    }\n    return fetch(input, init);\n  };\n  resetPassword = async (variables, requestInit) => {\n    const response = await fetch(\n      this.saleorApiUrl,\n      getRequestData(PASSWORD_RESET, variables, { ...this.defaultRequestInit, ...requestInit })\n    );\n    return this.handleSignIn(response);\n  };\n  signIn = async (variables, requestInit) => {\n    const response = await fetch(\n      this.saleorApiUrl,\n      getRequestData(TOKEN_CREATE, variables, { ...this.defaultRequestInit, ...requestInit })\n    );\n    return this.handleSignIn(response);\n  };\n  signOut = () => {\n    this.acessTokenStorage.clearAuthStorage();\n    this.refreshTokenStorage?.clearAuthStorage();\n    if (typeof document !== \"undefined\") {\n      document.cookie = cookie.serialize(\"token\", \"\", {\n        expires: /* @__PURE__ */ new Date(0),\n        path: \"/\"\n      });\n    }\n  };\n};\nvar createSaleorAuthClient = (props) => new SaleorAuthClient(props);\nfunction getInMemoryAccessTokenStorage() {\n  let accessToken = null;\n  return {\n    getItem() {\n      return accessToken;\n    },\n    removeItem() {\n      return accessToken = null;\n    },\n    setItem(_key, value) {\n      return accessToken = value;\n    }\n  };\n}\n\nexport {\n  SaleorAuthClient,\n  createSaleorAuthClient\n};\n", "import {\n  getRequestData\n} from \"./chunk-IRFIDVVY.mjs\";\nimport {\n  ExternalAuthenticationURL,\n  ExternalObtainAccessTokens\n} from \"./chunk-7JTFMRQS.mjs\";\n\n// src/SaleorExternalAuth.ts\nvar GraphQLError = class extends Error {\n  constructor(errorResponse) {\n    const message = errorResponse.errors.map((error) => error.message).join(\"\\n\");\n    super(message);\n    this.errorResponse = errorResponse;\n    this.name = this.constructor.name;\n    Object.setPrototypeOf(this, new.target.prototype);\n  }\n};\nvar SaleorExternalAuth = class {\n  constructor(saleorURL, provider) {\n    this.saleorURL = saleorURL;\n    this.provider = provider;\n  }\n  async makePOSTRequest(query, variables) {\n    const response = await fetch(this.saleorURL, getRequestData(query, variables));\n    const result = await response.json();\n    if (\"errors\" in result) {\n      console.error(result.errors);\n      throw new GraphQLError(result);\n    }\n    return result.data;\n  }\n  async initiate({ redirectURL }) {\n    const {\n      externalAuthenticationUrl: { authenticationData: data, errors }\n    } = await this.makePOSTRequest(ExternalAuthenticationURL, {\n      pluginId: this.provider,\n      input: JSON.stringify({ redirectUri: redirectURL })\n    });\n    if (errors.length > 0) {\n      console.error({ errors });\n      throw new GraphQLError({ errors });\n    }\n    const { authorizationUrl } = JSON.parse(data);\n    return authorizationUrl;\n  }\n  async obtainAccessToken({ code, state }) {\n    const { externalObtainAccessTokens: data } = await this.makePOSTRequest(ExternalObtainAccessTokens, {\n      pluginId: this.provider,\n      input: JSON.stringify({ code, state })\n    });\n    return data;\n  }\n};\n\nexport {\n  GraphQLError,\n  SaleorExternalAuth\n};\n", "// src/types.ts\nvar ExternalProvider = /* @__PURE__ */ ((ExternalProvider2) => {\n  ExternalProvider2[\"OpenIDConnect\"] = \"mirumee.authentication.openidconnect\";\n  ExternalProvider2[\"SaleorCloud\"] = \"cloud_auth.CloudAuthorizationPlugin\";\n  return ExternalProvider2;\n})(ExternalProvider || {});\n\nexport {\n  ExternalProvider\n};\n"],
  "mappings": "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",
  "names": ["decode", "cookie"]
}
